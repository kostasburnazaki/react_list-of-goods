{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","changeSortMethod","setState","reverseTheList","reset","goodsToRender","goods","visibleGoods","sort","item1","item2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","this","currentSortType","newReverse","className","type","classNames","onClick","map","item","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,iBAAmB,SAACF,GAClB,EAAKG,SAAS,CACZH,cARN,EAYEI,eAAiB,SAACL,GAChB,EAAKI,SAAS,CACZJ,gBAdN,EAkBEM,MAAQ,WACN,EAAKF,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KArBlB,4CAyBE,WAAU,IAAD,OACDO,EAzDH,SACLC,EADK,GAGJ,IADCP,EACF,EADEA,SAAUD,EACZ,EADYA,WAENS,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQX,GACN,KAAKL,EAASiB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAIThB,GACFS,EAAaQ,UAGRR,EAkCiBS,CAAkBrB,EAAiBsB,KAAKpB,OAC9D,EAAkDoB,KAAKpB,MAArCqB,EAAlB,EAAQnB,SAA2BD,EAAnC,EAAmCA,WAC7BqB,GAAcrB,EAEpB,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYJ,IAAoBxB,EAASiB,WAE7CY,QAAS,kBAAM,EAAKtB,iBAAiBP,EAASiB,WANhD,iCAWA,wBACEU,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYJ,IAAoBxB,EAASmB,SAE7CU,QAAS,kBAAM,EAAKtB,iBAAiBP,EAASmB,SANhD,4BAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAaxB,IAEjByB,QAAS,kBAAM,EAAKpB,eAAegB,IANrC,sBAWED,IAAoBxB,EAASM,MAAQF,IAEnC,wBACEuB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKnB,SAHtB,sBAUN,6BACE,6BACGC,EAAcmB,KAAI,SAAAC,GACjB,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAlFxC,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d475ec1.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((item1, item2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return item1.localeCompare(item2);\n\n      case SortType.LENGTH:\n        return item1.length - item2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  changeSortMethod = (sortType: SortType) => {\n    this.setState({\n      sortType,\n    });\n  };\n\n  reverseTheList = (isReversed: boolean) => {\n    this.setState({\n      isReversed,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const goodsToRender = getReorderedGoods(goodsFromServer, this.state);\n    const { sortType: currentSortType, isReversed } = this.state;\n    const newReverse = !isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': currentSortType !== SortType.ALPHABET },\n            )}\n            onClick={() => this.changeSortMethod(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': currentSortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.changeSortMethod(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => this.reverseTheList(newReverse)}\n          >\n            Reverse\n          </button>\n\n          {(currentSortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => this.reset()}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {goodsToRender.map(item => {\n              return (\n                <li data-cy=\"Good\" key={item}>{item}</li>\n              );\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}